function cleanTable() {
    document.getElementById("showData").innerHTML = ""
    document.getElementById("cleanUpBtn").disabled = true
}

function mitarbeiterAuftraege() {
    //TODO: Here we could add a MITARBEITERID query
    //TODO: Here we could add a AUFTRAGSNUMMER query
    CreateUserTable("http://127.0.0.1:8080/api/mitarbeiterauftraege")
}


function Materialbestellungen() {
    
    CreateUserTable("http://127.0.0.1:8080/api/bestellungenmat")
}

function auftragMaterial() {
    //TODO: Here we could add a AUFTRAGSNUMMER query
    
    CreateUserTable("http://127.0.0.1:8080/api/auftragmat")
}

function auftraegeWagen() {
    //TODO: Here we could add a Kennzeichen query
    //TODO: Here we could add a AUFTRAGSNUMMER query
    CreateUserTable("http://127.0.0.1:8080/api/auftraegewagen")
}

function firmaKunden() {
    //TODO: Here we could add a FIRMENID query
    
    CreateUserTable("http://127.0.0.1:8080/api/firmakunden")
}

function durchschnittMatVerbrauch() {
    //TODO: Here we could add a ARTIKELNUMMER query

    CreateUserTable("http://127.0.0.1:8080/api/matverbrauch")
}

function kundenauftragrechnung() {
    CreateUserTable("http://127.0.0.1:8080/api/kundenauftragrechnung")
}

function materialpreisaenderungen() {
    CreateUserTable("http://127.0.0.1:8080/api/materialpreisaenderungen")
}

function geringerbestand() {
    CreateUserTable("http://127.0.0.1:8080/api/geringerbestand", true)
}

function alleMaterialien() {
    CreateUserTable("http://127.0.0.1:8080/api/allematerialien", true)
}
//TODO:----------------------------------------------------------------------------------------------------------------------

function wagen_verfuegbar() {
    CreateUserTable("http://127.0.0.1:8080/api/wagen_verfuegbar")
}

function belegte_wagen() {
    CreateUserTable("http://127.0.0.1:8080/api/firmenwagen_belegt")
}

function mitarbeiter_auftragsdatum() {
    CreateUserTable("http://127.0.0.1:8080/api/mitarbeiter_auftragsdatum")
}

function rechnung_summe() {
    CreateUserTable("http://127.0.0.1:8080/api/rechnung_summe")
}

function materialien_verbrauch_monat() {
    CreateUserTable("http://127.0.0.1:8080/api/materialien_verbrauch_monat")
}

function kunden_rabatt_rechnung() {
    CreateUserTable("http://127.0.0.1:8080/api/kunden_rabatt_rechnung")
}

function mitarbeiter_lager_fehlende_menge() {
    CreateUserTable("http://127.0.0.1:8080/api/mitarbeiter_lager_fehlende_menge")
}

function auftraege_ohne_Rechnung() {
    CreateUserTable("http://127.0.0.1:8080/api/auftraege_ohne_Rechnung")
}

function firma_stats() {
    CreateUserTable("http://127.0.0.1:8080/api/firma_stats")
}

function auftrag_invalid_material() {
    CreateUserTable("http://127.0.0.1:8080/api/auftrag_invalid_material")
}

function auftragTable() {
    CreateUserTable("http://127.0.0.1:8080/api/auftraege")
}

function kundenTable() {
    CreateUserTable("http://127.0.0.1:8080/api/kunden")
}

function mitarbeiterTable() {
    console.log("Mitarbeiter"), CreateUserTable("http://127.0.0.1:8080/api/mitarbeiter")
}

function rechnungTable() {
    CreateUserTable("http://127.0.0.1:8080/api/rechnungen")
}

function lieferantenTable() {
    CreateUserTable("http://127.0.0.1:8080/api/lieferranten")
}

function bestellungsTable() {
    console.log("Bestellungen"), CreateUserTable("http://127.0.0.1:8080/api/bestellungen")
}

function firmenTable() {
    CreateUserTable("http://127.0.0.1:8080/api/firmen")
}

function firmenwagenTable() {
    CreateUserTable("http://127.0.0.1:8080/api/firmenwagen")
}

function lagerTable() {
    CreateUserTable("http://127.0.0.1:8080/api/lager")
}

function materialTable() {
    CreateUserTable("http://127.0.0.1:8080/api/materialien")
}

function preisTable() {
    CreateUserTable("http://127.0.0.1:8080/api/preisaenderungen")
}

function unterweisungTable() {
    CreateUserTable("http://127.0.0.1:8080/api/unterweisungen")
}

function relationsTable() {
    CreateUserTable("http://185.194.217.213:8080/api/v1/relations/getRelations?key=e62579d4-b8f7-41c0-8513-6c00e1c30c13")
}

function userTable() {
    CreateUserTable("http://185.194.217.213:8080/api/v1/user/getUsers?key=e62579d4-b8f7-41c0-8513-6c00e1c30c13")
}

function CreateUserTable(e, handle = false) {
    $.ajaxSetup({
        cache: !1
    }), $.ajax({
        url: e,
        type: "GET",
        dataType: "json",
        success: function (e) {
            response = e, console.log("Response: "), console.log(response),
                function (e) {
                    if (document.getElementById("cleanUpBtn").disabled) {
                        document.getElementById("cleanUpBtn").disabled = false
                    }
                    console.log("Baue Table");
                    let t = [];
                    for (let n in console.log(e[0]), e[0]) - 1 === t.indexOf(n) && t.push(e[0][n]);
                    let a = document.createElement("table");
                    a.setAttribute("id", "table"), a.classList.add("table"), a.setAttribute("data-toggle", "data"), a.setAttribute("data-ajax", "testCall"), a.setAttribute("data-search", "true"), a.setAttribute("data-side-pagination", "server"), a.setAttribute("data-pagination", "true");
                    for (let l = a.insertRow(-1), i = 0; i < t.length; i++) {
                        let r = document.createElement("th");
                        r.setAttribute("data-field", t[i]), r.innerHTML = t[i].toUpperCase(), l.appendChild(r)
                    }
                    showFilterFields(t)
                    for (i = 1; i < e.length; i++) {
                        l = a.insertRow(-1);
                        if (handle) {
                            // if handle is true, change the background color of the row if the mindestbestand is <= Bestand
                            if (e[i][4] <= e[i][5]) {
                                l.style.backgroundColor = "red"
                            }
                        }
                        for (let u = 0; u < t.length; u++) {
                            // if e[0][u] contains "datum" try to parse it
                            if (e[0][u].includes("DATUM") || e[0][u].includes("JAHR")) {
                                let d = new Date(e[i][u]);
                                // fill with 0 if necessary
                                let o = d.getDate() < 10 ? "0" + d.getDate() : d.getDate();
                                let s = d.getMonth() < 10 ? "0" + (d.getMonth() + 1) : d.getMonth() + 1;
                                let f = o + "." + s + "." +  d.getFullYear();
                                l.insertCell(-1).innerHTML = f
                            // if e[0][u] contains "telefon" add a link to the phone and add a 0 on the beginning
                            } else if (e[0][u].includes("TELEFON")) {
                                let c = document.createElement("a")
                                c.setAttribute("href", "tel:0" + e[i][u]), c.innerHTML = "0".concat(e[i][u])
                                l.insertCell(-1).appendChild(c)
                            // if e[0][u] contains "email" add a link to the email
                            } else if (e[0][u].includes("EMAIL")) {
                                let c = document.createElement("a")
                                c.setAttribute("href", "mailto:" + e[i][u]), c.innerHTML = e[i][u]
                                l.insertCell(-1).appendChild(c)
                            // if e[0][u] contains "url" add a link to the url
                            } else if (e[0][u] === "URL") {
                                let c = document.createElement("a")
                                c.setAttribute("href", "https://".concat(e[i][u])), c.innerHTML = e[i][u]
                                l.insertCell(-1).appendChild(c)
                            // if e[0][u] is "MitarbeiterID" add to tooltip the name of the mitarbeiter
                            } else if (e[0][u] === "MITARBEITERID") {
                                let c = l.insertCell(-1)
                                getCall(`http://127.0.0.1:8080/api/mitarbeiter?MITARBEITERID=${e[i][u]}`).then((data) => {
                                    c.innerHTML = data[1][0]
                                    c.setAttribute("data-toggle", "tooltip")
                                    c.setAttribute("data-placement", "top")
                                    c.setAttribute("data-html", "true")
                                    c.setAttribute("title", data[1][2] + ", " + data[1][3])
                                })
                            // if e[0][u] is "KUNDENID" add to tooltip the name of the kunde
                            } else if (e[0][u] === "KUNDENID") {
                                let c = l.insertCell(-1)
                                getCall(`http://127.0.0.1:8080/api/kunden?KUNDENID=${e[i][u]}`).then((data) => {
                                    c.innerHTML = data[1][0]
                                    c.setAttribute("data-toggle", "tooltip")
                                    c.setAttribute("data-placement", "top")
                                    c.setAttribute("data-html", "true")
                                    c.setAttribute("title", data[1][2] + ", " + data[1][3])
                                })
                            // if e[0][u] is "ARTIKELNUMMER" add to tooltip the name of the artikel
                            } else if (e[0][u] === "ARTIKELNUMMER") {
                                let c = l.insertCell(-1)
                                getCall(`http://127.0.0.1:8080/api/materialien?ARTIKELNUMMER=${e[i][u]}`).then((data) => {
                                    c.innerHTML = data[1][0]
                                    c.setAttribute("data-toggle", "tooltip")
                                    c.setAttribute("data-placement", "top")
                                    c.setAttribute("data-html", "true")
                                    c.setAttribute("title", data[1][4])
                                })
                            } else {
                                l.insertCell(-1).innerHTML = e[i][u]
                            }
                        }
                    }
                    let d = document.getElementById("showData");
                    d.innerHTML = "", d.appendChild(a)
                }(e)
        },
        statuscode: {
            404: function () {
                alert("Seite nicht erreichbar")
            },
            500: function () {
                alert("DB antwortet nicht")
            }
        },
        fail: {
            function () {
                console.log("Request failed")
            }
        }
    })
}

function addFilterField() {
    const filterContainer = document.getElementById("filterFields");
    const newInput = document.createElement("input");
    newInput.classList.add("form-control-sm");
    newInput.setAttribute("type", "text");
    newInput.setAttribute("id", "querytxt" + filterContainer.childElementCount);
    newInput.setAttribute("placeholder", "Filter Column " + (parseInt(filterContainer.childElementCount)+1));
    newInput.setAttribute("onkeyup", "filtertable(" + filterContainer.childElementCount + "); clearFields(" + filterContainer.childElementCount + ")");
    filterContainer.appendChild(newInput);
}

function clearFields(myIndex) {
    const filterContainer = document.getElementById("filterFields");
    // clear all fields but the one that was changed
    for (let i = 0; i < filterContainer.childElementCount; i++) {
        if (i != myIndex) {
            filterContainer.children[i].value = "";
        }
    }
}

function showFilterFields(columns) {
    let filterContainer = document.getElementById("filterFields");
    if (columns.length > filterContainer.childElementCount) {
        for (let i = filterContainer.childElementCount; i < columns.length; i++) {
            addFilterField();
        }
    }
    // hide all filter fields
    for (let i = 0; i < filterContainer.childElementCount; i++) {
        filterContainer.children[i].style.display = "none";
        // set place holder to ''
        filterContainer.children[i].setAttribute("placeholder", "");
    }
    // show only count filter fields
    for (let i = 0; i < columns.length; i++) {
        filterContainer.children[i].style.display = "inline";
        // set place holder to 'Filter columns[i]'
        filterContainer.children[i].setAttribute("placeholder", "Filter " + columns[i].toLowerCase().charAt(0).toUpperCase() + columns[i].toLowerCase().slice(1));
    }
}

function filtertable(column) {
    let e, t, n, a;
    for (e = document.getElementById("querytxt".concat(column)).value.toUpperCase(), t = document.getElementById("table").getElementsByTagName("tr"), a = 0; a < t.length; a++)
    (n = t[a].getElementsByTagName("td")[column]) && ((n.textContent || n.innerText).toUpperCase().indexOf(e) > -1 ? t[a].style.display = "" : t[a].style.display = "none")
}

function rabattSelect() {
    if (document.getElementById("rabatt_kundenid").value.trim() != "") {
        getCall(`http://127.0.0.1:8080/api/kunden?KUNDENID=${document.getElementById("rabatt_kundenid").value}`).then((data) => {
            if (data != undefined && data.length > 1) {
                document.getElementById("rabatt_name").innerHTML = "Name: ".concat(data[1][2]);
            }
        }) 
    }
}

function giveRabatt() {
    if (document.getElementById("rabatt_kundenid").value.trim() != "" && document.getElementById("rabatt_neu").value.trim() != "" && document.getElementById("rabatt_neu").value.trim() >= 0 && document.getElementById("rabatt_neu").value.trim() <= 100) {
        insertCall(`http://127.0.0.1:8080/api/editKundenRabatt`, {
            KUNDENID: document.getElementById("rabatt_kundenid").value,
            KUNDENRABATT: Number(document.getElementById("rabatt_neu").value / 100.0).toFixed(2).replace(".", ",")
        })
    }
}

function insertLieferant() {
    insertCall("http://127.0.0.1:8080/api/createlieferrant", {
        LIEFERRANTENNR: document.getElementById("lieferanten_lieferantennr").value,
        LIEFERRANTENNAME: document.getElementById("lieferanten_lieferantenname").value,
        URL: document.getElementById("lieferanten_url").value,
        EMAIL: document.getElementById("lieferanten_email").value,
        BESTELLRABATT: document.getElementById("lieferanten_bestellrabatt").value,
        LIEFERRANTENTELEFONNUMMER: document.getElementById("lieferanten_lieferantentelefonnummer").value
    })
}

function deleteLieferant() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("lieferanten_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deletelieferrant", {
        LIEFERRANTENNR: e
    })
}

function insertBestellung() {
    insertCall("http://127.0.0.1:8080/api/createbestellung", {
        BESTELLUNGSNR: document.getElementById("bestellung_bestellungsnr").value,
        LIEFERRANTENNR: document.getElementById("bestellung_lieferantennr").value,
        LIEFERDATUM: document.getElementById("bestellung_lieferdatum").value,
        BESTELLDATUM: document.getElementById("bestellung_bestelldatum").value,
        BESTELLMENGE: document.getElementById("bestellung_bestellmenge").value
    })
}

function deleteBestellung() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("bestellung_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deletebestellung", {
        BESTELLUNGSNR: e
    })
}

function insertFirma() {
    insertCall("http://127.0.0.1:8080/api/createfirma", {
        FIRMENID: document.getElementById("firma_firmenid").value,
        PLZ: document.getElementById("firma_plz").value,
        FIRMENSTRASSE: document.getElementById("firma_firmenstrasse").value,
        FIRMENHAUSNUMMER: document.getElementById("firma_firmenhausnummer").value
    })
}

function deleteFirma() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("firma_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deletefirma", {
        BESTELLUNGSNR: e
    })
}

function insertFirmenwagen() {
    insertCall("http://127.0.0.1:8080/api/createfirmenwagen", {
        KENNZEICHEN: document.getElementById("firmenwagen_kennzeichen").value,
        FIRMENID: document.getElementById("firmenwagen_firmenid").value,
        TUEV: document.getElementById("firmenwagen_tuev").value,
        TYP: document.getElementById("firmenwagen_typ").value
    })
}

function deleteFirmenwagen() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("firmenwagen_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deletefirmenwagen", {
        KENNZEICHEN: e
    })
}

function insertLager() {
    let e = document.getElementById("lager_lagerid").value,
        t = document.getElementById("lager_firmenid").value,
        n = document.getElementById("lager_arbeitsbereich").value;
    console.log(e), insertCall("http://127.0.0.1:8080/api/createlager", {
        LAGERID: e,
        FIRMENID: t,
        ARBEITSBEREICH: n
    })
}

function deleteLager() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("lager_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deletelager", {
        LAGERID: e
    })
}

function insertMaterial() {
    insertCall("http://127.0.0.1:8080/api/creatematerial", {
        ARTIKELNUMMER: document.getElementById("material_artikelnummer").value,
        BESTELLUNGSNR: document.getElementById("material_bestellungsnummer").value,
        EINKAUFSPREIS: document.getElementById("material_einkaufspreis").value,
        VERKAUFSPREIS: document.getElementById("material_verkaufspreis").value,
        BEZEICHNUNG: document.getElementById("material_bezeichnung").value,
        BESTAND: document.getElementById("material_bestand").value,
        KAPAZITAT: document.getElementById("material_kapazitaet").value,
        MINDESBESTAND: document.getElementById("material_mindestbestand").value
    })
}

function deleteMaterial() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("material_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deletematerial", {
        ARTIKELNUMMER: e
    })
}

function insertPreisaenderung() {
    insertCall("http://127.0.0.1:8080/api/createpreisaenderung", {
        PREISID: document.getElementById("preisaenderung_preisid").value,
        ARTIKELNUMMER: document.getElementById("preisaenderung_artikelnummer").value,
        ANDERUNGSDATUM: document.getElementById("preisaenderung_aenderungsdatum").value,
        PREIS_ZU_DEM_ZEITPUNKT: document.getElementById("preisaenderung_preis_zu_dem_zeitpunkt").value
    })
}

function deletePreisaenderung() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("preisaenderung_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deletepreisaenderung", {
        PREISID: e
    })
}

function insertUnterweisung() {
    insertCall("http://127.0.0.1:8080/api/createunterweisung", {
        UNTERWEISUNGSID: document.getElementById("unterweisung_unterweisungsid").value,
        MITARBEITERID: document.getElementById("unterweisung_mitarbeiterid").value,
        UNTERWEISUNGSNAME: document.getElementById("unterweisung_unterweisungsname").value
    })
}

function deleteUnterweisung() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("unterweisung_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deleteunterweisung", {
        UNTERWEISUNGSID: e
    })
}

function insertRechnung() {
    insertCall("http://127.0.0.1:8080/api/createrechnung", {
        RECHNUNGSNR: document.getElementById("rechnung_rechnungsnr").value,
        AUFTRAGSNUMMER: document.getElementById("rechnung_auftragsnummer").value,
        KUNDENID: document.getElementById("rechnung_kundenid").value,
        SUMME: document.getElementById("rechnung_summe").value,
        RECHNUNGSDATUM: document.getElementById("rechnung_rechnungsdatum").value,
        ZAHLUNGSART: document.getElementById("rechnung_zahlungsart").value,
        RABATT: document.getElementById("rechnung_rabatt").value,
        LAUFZEIT: document.getElementById("rechnung_laufzeit").value,
        AUFPREIS: document.getElementById("rechnung_aufpreis").value,
        MITARBEITERZEITEN: document.getElementById("rechnung_mitarbeiterarbeitszeiten").value
    })
}

function deleteRechnung() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("rechnung_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deleterechnung", {
        RECHNUNGSNR: e
    })
}

function insertMitarbeiter() {
    alert("Running");
    let e = document.getElementById("mitarbeiter_mitarbeiterid").value,
        t = document.getElementById("mitarbeiter_firmenid").value,
        n = document.getElementById("mitarbeiter_vorname").value,
        a = document.getElementById("mitarbeiter_nachname").value,
        l = document.getElementById("mitarbeiter_geburtsdatum").value,
        i = document.getElementById("mitarbeiter_stundenlohn").value,
        r = document.getElementById("mitarbeiter_iban").value,
        u = document.getElementById("mitarbeiter_versichertennummer").value,
        d = document.getElementById("mitarbeiter_urlaubstage").value,
        s = document.getElementById("mitarbeiter_abteilung").value,
        o = document.getElementById("mitarbeiter_einstellungsjahr").value,
        c = document.getElementById("mitarbeiter_azubi").value,
        m = document.getElementById("mitarbeiter_fuehrerschein").value,
        g = document.getElementById("mitarbeiter_telefon").value;
    console.log("Geburtsdatum: " + l), insertCall("http://127.0.0.1:8080/api/createmitarbeiter", {
        MITARBEITERID: e,
        FIRMENID: t,
        VORNAME: n,
        NACHNAME: a,
        GEBURTSDATUM: l,
        STUNDENLOHN: i,
        IBAN: r,
        VERSICHERTENNUMMER: u,
        URLAUBSTAGE: d,
        ABTEILUNG: s,
        EINSTELLUNGSJAHR: o,
        AZUBI: c,
        FUHRERSCHEIN: m,
        TELEFON: g
    })
}

function deleteMitarbeiter() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("mitarbeiter_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deletemitarbeiter", {
        MITARBEITERID: e
    })
}

function insertKunde() {
    let e = document.getElementById("kunde_kundenid").value,
        t = document.getElementById("kunde_kundenplz").value,
        n = document.getElementById("kunde_kundenname").value;
    insertCall("http://127.0.0.1:8080/api/createkunde", {
        KUNDENID: e,
        KUNDENNAME: n,
        PLZ: t,
        KUNDENNAME: n,
        KUNDENHAUSNUMMER: document.getElementById("kunde_kundenhausnummer").value,
        KUNDENSTRASSE: document.getElementById("kunde_kundenstrasse").value,
        KUNDENRABATT: document.getElementById("kunde_kundenrabatt").value
    })
}

function deleteKunde() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("kunde_id_delete").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deletekunde", {
        KUNDENID: e
    })
}

function insertAuftrag() {
    let e = document.getElementById("auftraege_auftragsnummer").value,
        t = document.getElementById("auftraege_kundenid").value,
        n = document.getElementById("auftraege_plz").value,
        a = document.getElementById("auftraege_strasse").value,
        l = document.getElementById("auftraege_auftragshausnummer").value,
        i = document.getElementById("auftraege_artdesauftrags").value,
        r = document.getElementById("auftraege_auftragsdatum").value;
    console.log("Versuche zu senden"), console.log("Datum: " + Date.now()), insertCall("http://127.0.0.1:8080/api/createauftrag", {
        AUFTRAGSNUMMER: e,
        KUNDENID: t,
        PLZ: n,
        AUFTRAGSSTRASSE: a,
        AUFTRAGSHAUSNUMMER: l,
        ARTDESAUFTRAGS: i,
        AUFTRAGSDATUM: r
    })
}

function deleteAuftrag() {
    console.log("Versuche zu deleten");
    let e = document.getElementById("auftraege_id").value;
    console.log(e), deleteCall("http://127.0.0.1:8080/api/deleteauftrag", {
        AUFTRAGSNUMMER: e
    })
}

function insertCall(e, t) {
    $.ajaxSetup({
        cache: !1
    }), $.ajax({
        url: e,
        type: "POST",
        dataType: "json",
        data: t,
        success: function () {
            alert("Done! :D")
        },
        statuscode: {
            404: function () {
                alert("Seite nicht erreichbar")
            },
            500: function () {
                alert("DB antwortet nicht")
            }
        },
        fail: {
            function () {
                console.log("Request failed")
            }
        }
    })
}
// Makes a get request to the given url and returns the result
function getCall(e) {
    return new Promise(function (t, n) {
        $.ajax({
            url: e,
            type: "GET",
            dataType: "json",
            success: function (e) {
                t(e)
            },
            statuscode: {
                404: function () {
                    alert("Seite nicht erreichbar")
                    n("Request failed")
                },
                500: function () {
                    alert("DB antwortet nicht")
                    n("Request failed")
                }
            },
            fail: {
                function () {
                    console.log("Request failed")
                    n("Request failed")
                }
            }
        })
    })
}

function deleteCall(e, t) {
    $.ajaxSetup({
        cache: !1
    }), $.ajax({
        url: e,
        type: "DELETE",
        dataType: "json",
        data: t,
        success: function () {
            alert("Done! :D")
        },
        statuscode: {
            404: function () {
                alert("Seite nicht erreichbar")
            },
            500: function () {
                alert("DB antwortet nicht")
            }
        },
        fail: {
            function () {
                console.log("Request failed")
            }
        }
    })
}
window.innerWidth < 768 && [].slice.call(document.querySelectorAll("[data-bss-disabled-mobile]")).forEach((function (e) {
    e.classList.remove("animated"), e.removeAttribute("data-bss-hover-animate"), e.removeAttribute("data-aos")
})), document.addEventListener("DOMContentLoaded", (function () {
    [].slice.call(document.querySelectorAll("[data-bss-hover-animate]")).forEach((function (e) {
        e.addEventListener("mouseenter", (function (e) {
            e.target.classList.add("animated", e.target.dataset.bssHoverAnimate)
        })), e.addEventListener("mouseleave", (function (e) {
            e.target.classList.remove("animated", e.target.dataset.bssHoverAnimate)
        }))
    }));
    let e = document.querySelectorAll("[data-bss-chart]");
    for (let t of e) t.chart = new Chart(t, JSON.parse(t.dataset.bssChart))
}), !1), jQuery(document).ready((function (e) {
    let t, n, a = 2500,
        l = 3800;

    function r(e) {
        let t = o(e);
        if (e.parents(".cd-headline").hasClass("type")) {
            let n = e.parent(".cd-words-wrapper");
            n.addClass("selected").removeClass("waiting"), setTimeout((function () {
                n.removeClass("selected"), e.removeClass("is-visible").addClass("is-hidden").children("i").removeClass("in").addClass("out")
            }), 500), setTimeout((function () {
                u(t, 150)
            }), 1300)
        } else if (e.parents(".cd-headline").hasClass("letters")) {
            let i = e.children("i").length >= t.children("i").length;
            d(e.find("i").eq(0), e, i, 50), s(t.find("i").eq(0), t, i, 50)
        } else e.parents(".cd-headline").hasClass("clip") ? e.parents(".cd-words-wrapper").animate({
            width: "2px"
        }, 600, (function () {
            c(e, t), u(t)
        })) : e.parents(".cd-headline").hasClass("loading-bar") ? (e.parents(".cd-words-wrapper").removeClass("is-loading"), c(e, t), setTimeout((function () {
            r(t)
        }), l), setTimeout((function () {
            e.parents(".cd-words-wrapper").addClass("is-loading")
        }), 800)) : (c(e, t), setTimeout((function () {
            r(t)
        }), a))
    }

    function u(e, t) {
        e.parents(".cd-headline").hasClass("type") ? (s(e.find("i").eq(0), e, !1, t), e.addClass("is-visible").removeClass("is-hidden")) : e.parents(".cd-headline").hasClass("clip") && e.parents(".cd-words-wrapper").animate({
            width: e.width() + 10
        }, 600, (function () {
            setTimeout((function () {
                r(e)
            }), 1500)
        }))
    }

    function d(t, n, l, i) {
        if (t.removeClass("in").addClass("out"), t.is(":last-child") ? l && setTimeout((function () {
                r(o(n))
            }), a) : setTimeout((function () {
                d(t.next(), n, l, i)
            }), i), t.is(":last-child") && e("html").hasClass("no-csstransitions")) {
            let u = o(n);
            c(n, u)
        }
    }

    function s(e, t, n, l) {
        e.addClass("in").removeClass("out"), e.is(":last-child") ? (t.parents(".cd-headline").hasClass("type") && setTimeout((function () {
            t.parents(".cd-words-wrapper").addClass("waiting")
        }), 200), n || setTimeout((function () {
            r(t)
        }), a)) : setTimeout((function () {
            s(e.next(), t, n, l)
        }), l)
    }

    function o(e) {
        return e.is(":last-child") ? e.parent().children().eq(0) : e.next()
    }

    function c(e, t) {
        e.removeClass("is-visible").addClass("is-hidden"), t.removeClass("is-hidden").addClass("is-visible")
    }
    e(".cd-headline.letters").find("b").each((function () {
        let t = e(this),
            n = t.text().split(""),
            a = t.hasClass("is-visible");
        for (i in n) t.parents(".rotate-2").length > 0 && (n[i] = "<em>" + n[i] + "</em>"), n[i] = a ? '<i class="in">' + n[i] + "</i>" : "<i>" + n[i] + "</i>";
        let l = n.join("");
        t.html(l).css("opacity", 1)
    })), t = e(".cd-headline"), n = a, t.each((function () {
        let t = e(this);
        if (t.hasClass("loading-bar")) n = l, setTimeout((function () {
            t.find(".cd-words-wrapper").addClass("is-loading")
        }), 800);
        else if (t.hasClass("clip")) {
            let a = t.find(".cd-words-wrapper"),
                i = a.width() + 10;
            a.css("width", i)
        } else if (!t.hasClass("type")) {
            let u = t.find(".cd-words-wrapper b"),
                d = 0;
            u.each((function () {
                let t = e(this).width();
                t > d && (d = t)
            })), t.find(".cd-words-wrapper").css("width", d)
        }
        setTimeout((function () {
            r(t.find(".is-visible").eq(0))
        }), n)
    }))
}));