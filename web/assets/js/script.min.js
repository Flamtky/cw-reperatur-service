
if (window.innerWidth < 768) {
	[].slice.call(document.querySelectorAll('[data-bss-disabled-mobile]')).forEach(function (elem) {
		elem.classList.remove('animated');
		elem.removeAttribute('data-bss-hover-animate');
		elem.removeAttribute('data-aos');
	});
}

document.addEventListener('DOMContentLoaded', function() {

	var hoverAnimationTriggerList = [].slice.call(document.querySelectorAll('[data-bss-hover-animate]'));
	var hoverAnimationList = hoverAnimationTriggerList.forEach(function (hoverAnimationEl) {
		hoverAnimationEl.addEventListener('mouseenter', function(e){ e.target.classList.add('animated', e.target.dataset.bssHoverAnimate) });
		hoverAnimationEl.addEventListener('mouseleave', function(e){ e.target.classList.remove('animated', e.target.dataset.bssHoverAnimate) });
	});

	var charts = document.querySelectorAll('[data-bss-chart]');

	for (var chart of charts) {
		chart.chart = new Chart(chart, JSON.parse(chart.dataset.bssChart));
	}
}, false);
jQuery(document).ready(function($) {
    var animationDelay = 2500,
        barAnimationDelay = 3800,
        barWaiting = barAnimationDelay - 3e3,
        lettersDelay = 50,
        typeLettersDelay = 150,
        selectionDuration = 500,
        typeAnimationDelay = selectionDuration + 800,
        revealDuration = 600,
        revealAnimationDelay = 1500;
    initHeadline();
    function initHeadline() {
        singleLetters($(".cd-headline.letters").find("b"));
        animateHeadline($(".cd-headline"))
    }
    function singleLetters($words) {
        $words.each(function() {
            var word = $(this),
                letters = word.text().split(""),
                selected = word.hasClass("is-visible");
            for (i in letters) {
                if (word.parents(".rotate-2").length > 0)
                    letters[i] = "<em>" + letters[i] + "</em>";
                letters[i] = selected ? '<i class="in">' + letters[i] + "</i>" : "<i>" + letters[i] + "</i>"
            }
            var newLetters = letters.join("");
            word.html(newLetters).css("opacity", 1)
        })
    }
    function animateHeadline($headlines) {
        var duration = animationDelay;
        $headlines.each(function() {
            var headline = $(this);
            if (headline.hasClass("loading-bar")) {
                duration = barAnimationDelay;
                setTimeout(function() {
                    headline.find(".cd-words-wrapper").addClass("is-loading")
                }, barWaiting)
            } else if (headline.hasClass("clip")) {
                var spanWrapper = headline.find(".cd-words-wrapper"),
                    newWidth = spanWrapper.width() + 10;
                spanWrapper.css("width", newWidth)
            } else if (!headline.hasClass("type")) {
                var words = headline.find(".cd-words-wrapper b"),
                    width = 0;
                words.each(function() {
                    var wordWidth = $(this).width();
                    if (wordWidth > width)
                        width = wordWidth
                });
                headline.find(".cd-words-wrapper").css("width", width)
            }
            setTimeout(function() {
                hideWord(headline.find(".is-visible").eq(0))
            }, duration)
        })
    }
    function hideWord($word) {
        var nextWord = takeNext($word);
        if ($word.parents(".cd-headline").hasClass("type")) {
            var parentSpan = $word.parent(".cd-words-wrapper");
            parentSpan.addClass("selected").removeClass("waiting");
            setTimeout(function() {
                parentSpan.removeClass("selected");
                $word.removeClass("is-visible").addClass("is-hidden").children("i").removeClass("in").addClass("out")
            }, selectionDuration);
            setTimeout(function() {
                showWord(nextWord, typeLettersDelay)
            }, typeAnimationDelay)
        } else if ($word.parents(".cd-headline").hasClass("letters")) {
            var bool = $word.children("i").length >= nextWord.children("i").length ? true : false;
            hideLetter($word.find("i").eq(0), $word, bool, lettersDelay);
            showLetter(nextWord.find("i").eq(0), nextWord, bool, lettersDelay)
        } else if ($word.parents(".cd-headline").hasClass("clip")) {
            $word.parents(".cd-words-wrapper").animate({
                width: "2px"
            }, revealDuration, function() {
                switchWord($word, nextWord);
                showWord(nextWord)
            })
        } else if ($word.parents(".cd-headline").hasClass("loading-bar")) {
            $word.parents(".cd-words-wrapper").removeClass("is-loading");
            switchWord($word, nextWord);
            setTimeout(function() {
                hideWord(nextWord)
            }, barAnimationDelay);
            setTimeout(function() {
                $word.parents(".cd-words-wrapper").addClass("is-loading")
            }, barWaiting)
        } else {
            switchWord($word, nextWord);
            setTimeout(function() {
                hideWord(nextWord)
            }, animationDelay)
        }
    }
    function showWord($word, $duration) {
        if ($word.parents(".cd-headline").hasClass("type")) {
            showLetter($word.find("i").eq(0), $word, false, $duration);
            $word.addClass("is-visible").removeClass("is-hidden")
        } else if ($word.parents(".cd-headline").hasClass("clip")) {
            $word.parents(".cd-words-wrapper").animate({
                width: $word.width() + 10
            }, revealDuration, function() {
                setTimeout(function() {
                    hideWord($word)
                }, revealAnimationDelay)
            })
        }
    }
    function hideLetter($letter, $word, $bool, $duration) {
        $letter.removeClass("in").addClass("out");
        if (!$letter.is(":last-child")) {
            setTimeout(function() {
                hideLetter($letter.next(), $word, $bool, $duration)
            }, $duration)
        } else if ($bool) {
            setTimeout(function() {
                hideWord(takeNext($word))
            }, animationDelay)
        }
        if ($letter.is(":last-child") && $("html").hasClass("no-csstransitions")) {
            var nextWord = takeNext($word);
            switchWord($word, nextWord)
        }
    }
    function showLetter($letter, $word, $bool, $duration) {
        $letter.addClass("in").removeClass("out");
        if (!$letter.is(":last-child")) {
            setTimeout(function() {
                showLetter($letter.next(), $word, $bool, $duration)
            }, $duration)
        } else {
            if ($word.parents(".cd-headline").hasClass("type")) {
                setTimeout(function() {
                    $word.parents(".cd-words-wrapper").addClass("waiting")
                }, 200)
            }
            if (!$bool) {
                setTimeout(function() {
                    hideWord($word)
                }, animationDelay)
            }
        }
    }
    function takeNext($word) {
        return !$word.is(":last-child") ? $word.next() : $word.parent().children().eq(0)
    }
    function takePrev($word) {
        return !$word.is(":first-child") ? $word.prev() : $word.parent().children().last()
    }
    function switchWord($oldWord, $newWord) {
        $oldWord.removeClass("is-visible").addClass("is-hidden");
        $newWord.removeClass("is-hidden").addClass("is-visible")
    }
});


function testCall(t){$.get("http://185.194.217.213:8080/api/v1/user/test?"+$.param(t.data)).then((function(e){t.success(e),console.log(e)}))}function getAll(){$.ajax({url:"https://examples.wenzhixin.net.cn/examples/bootstrap_table/data",type:"GET",dataType:"json",success:function(t){return console.log("Data fetched"),console.log(t),t},error:function(t){console.log(`Error ${t}`)}})}
$(function(){
            
    console.log("Running chart update")
    let charts = document.getElementsByTagName('canvas');

    $(document).on('click', function(){
        charts[0].chart.data.datasets[0].data[2] = 30;
        charts[0].chart.update();
    });
    
});


function cleanTable() {
    var divContainer = document.getElementById("showData");
        divContainer.innerHTML = "";
}
//VIEWS
function wagen_verfuegbar() {
    CreateUserTable("http://127.0.0.1:8080/api/wagen_verfuegbar")
}

function belegte_wagen() {
    CreateUserTable("http://127.0.0.1:8080/api/firmenwagen_belegt")
}

function mitarbeiter_auftragsdatum() {
    CreateUserTable("http://127.0.0.1:8080/api/mitarbeiter_auftragsdatum")
}

function rechnung_summe() {
    CreateUserTable("http://127.0.0.1:8080/api/rechnung_summe")
}

function materialien_verbrauch_monat() {
    CreateUserTable("http://127.0.0.1:8080/api/materialien_verbrauch_monat")
}

function kunden_rabatt_rechnung() {
    CreateUserTable("http://127.0.0.1:8080/api/kunden_rabatt_rechnung")
}

function mitarbeiter_lager_fehlende_menge() {
    CreateUserTable("http://127.0.0.1:8080/api/mitarbeiter_lager_fehlende_menge")
}

function auftraege_ohne_Rechnung() {
    CreateUserTable("http://127.0.0.1:8080/api/auftraege_ohne_Rechnung")
}

function firma_stats() {
    CreateUserTable("http://127.0.0.1:8080/api/firma_stats")
}

function auftrag_invalid_material() {
    CreateUserTable("http://127.0.0.1:8080/api/auftrag_invalid_material")
}



//TABLES
function auftragTable() {
    CreateUserTable("http://127.0.0.1:8080/api/auftraege")
}

function kundenTable() {
    CreateUserTable("http://127.0.0.1:8080/api/kunden")
}

function mitarbeiterTable() {
    console.log("Mitarbeiter")
    CreateUserTable("http://127.0.0.1:8080/api/mitarbeiter")
}

function rechnungTable() {
    CreateUserTable("http://127.0.0.1:8080/api/rechnungen")
}

function lieferantenTable() {
    CreateUserTable("http://127.0.0.1:8080/api/lieferranten")
}

function bestellungsTable() {
    console.log("Bestellungen")
    CreateUserTable("http://127.0.0.1:8080/api/bestellungen")
}

function firmenTable() {
    CreateUserTable("http://127.0.0.1:8080/api/firmen")
}

function firmenwagenTable() {
    CreateUserTable("http://127.0.0.1:8080/api/firmenwagen")
}

function lagerTable() {
    CreateUserTable("http://127.0.0.1:8080/api/lager")
}

function materialTable() {
    CreateUserTable("http://127.0.0.1:8080/api/materialien")
}

function preisTable() {
    CreateUserTable("http://127.0.0.1:8080/api/preisaenderungen")
}

function unterweisungTable() {
    CreateUserTable("http://127.0.0.1:8080/api/unterweisungen")
}


function relationsTable(){
    CreateUserTable("http://185.194.217.213:8080/api/v1/relations/getRelations?key=e62579d4-b8f7-41c0-8513-6c00e1c30c13")
    
}

function userTable() {
    CreateUserTable("http://185.194.217.213:8080/api/v1/user/getUsers?key=e62579d4-b8f7-41c0-8513-6c00e1c30c13")
}


function CreateUserTable(url) {
        $.ajaxSetup({cache:false})
        $.ajax({
        url: url,
        type: 'GET',
        dataType: 'json', // added data type
        success: function(res) {
            response = res;
            console.log("Response: ");
            console.log(response);
            doIt(res);
        },
        statuscode: {
            404: function() {
                alert("Seite nicht erreichbar")
            },
            500: function() {
                alert("DB antwortet nicht")
            }
        },
        fail: {
            function() {
                console.log("Request failed")
            }
        }
        });
    
        function doIt(data) {
            
        console.log("Baue Table");
        
        var col = [];
            console.log(data[0])
            for (var key in data[0]) {
                if (col.indexOf(key) === -1) {
                    col.push(data[0][key]);
                }
        }

        var table = document.createElement("table");
        table.setAttribute('id', 'table')
        table.classList.add('table');
        table.setAttribute('data-toggle', 'data')
        table.setAttribute('data-ajax', 'testCall')
        table.setAttribute('data-search', 'true')
        table.setAttribute('data-side-pagination', 'server')
        table.setAttribute('data-pagination', 'true')

        var tr = table.insertRow(-1);

        for (var i = 0; i < col.length; i++) {
            var th = document.createElement("th");
            th.setAttribute("data-field", col[i]);
            th.innerHTML = col[i].toUpperCase();
            tr.appendChild(th);
        }

        for (var i = 1; i < data.length; i++) {

            tr = table.insertRow(-1);

            for (var j = 0; j < col.length; j++) {
                console.log(data[i][0])
                var tabCell = tr.insertCell(-1);
                tabCell.innerHTML = data[i][j];
            }
        }

        var divContainer = document.getElementById("showData");
        divContainer.innerHTML = "";
        divContainer.appendChild(table);
        }
    }
function filtertable() {
    
  var input, filter, table, tr, td, i, txtValue;
  input = document.getElementById("querytxt");
  filter = input.value.toUpperCase();
  table = document.getElementById("table");
  tr = table.getElementsByTagName("tr");

  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[0];
    if (td) {
      txtValue = td.textContent || td.innerText;
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }
  }
}

function filtertable2() {
    
  var input, filter, table, tr, td, i, txtValue;
  input = document.getElementById("querytxt2");
  filter = input.value.toUpperCase();
  table = document.getElementById("table");
  tr = table.getElementsByTagName("tr");

  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[1];
    if (td) {
      txtValue = td.textContent || td.innerText;
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }
  }
}
function insertAuftrag() {
    let auftragsnummer = document.getElementById('auftraege_auftragsnummer').value
    let kundenid = document.getElementById('auftraege_id').value
    let plz = document.getElementById('auftraege_id').value
    let strasse = document.getElementById('auftraege_id').value
    let auftragshausnummer = document.getElementById('auftraege_id').value
    let artdesauftrags = document.getElementById('auftraege_id').value
    let artdesauftrags = document.getElementById('auftraege_id').value

    insertCall('http://127.0.0.1:8080/api/createauftrag', {});
}

function deleteAuftrag() {
    console.log("Versuche zu deleten")
    let id = document.getElementById('auftraege_id').value
    console.log(id)
    deleteCall('http://127.0.0.1:8080/api/deleteauftrag',{AUFTRAGSNUMMER:id})
}

function insertCall(url, params) {
    $.ajaxSetup({cache:false})
        $.ajax({
        url: url,
        type: 'POST',
        dataType: 'json',
        data: params,
        success: function() {
            alert("Done! :D");
        },
        statuscode: {
            404: function() {
                alert("Seite nicht erreichbar")
            },
            500: function() {
                alert("DB antwortet nicht")
            }
        },
        fail: {
            function() {
                console.log("Request failed")
            }
        }
        });
}

function deleteCall(url, params) {
    $.ajaxSetup({cache:false})
        $.ajax({
        url: url,
        type: 'DELETE',
        dataType: 'json',
        data: params,
        success: function() {
            alert("Done! :D");
        },
        statuscode: {
            404: function() {
                alert("Seite nicht erreichbar")
            },
            500: function() {
                alert("DB antwortet nicht")
            }
        },
        fail: {
            function() {
                console.log("Request failed")
            }
        }
        });
}